
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_tutorials/configuration.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_tutorials_configuration.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_tutorials_configuration.py:


ASPIRE Configuration
====================

This tutorial reviews the default ASPIRE configuration
and common patterns for overriding.

.. GENERATED FROM PYTHON SOURCE LINES 10-21

Default Configuration
---------------------
ASPIRE uses the `confuse library`_ for managing configuration.
While this document should cover common uses,
advanced users and developers should consider reviewing their documentation.

The ASPIRE package ships with ``config_default.yaml``.
This represents a base configuration.
The shipped configuration for this version of ASPIRE is:

.. literalinclude:: ../../../src/aspire/config_default.yaml

.. GENERATED FROM PYTHON SOURCE LINES 24-42

System Overrides
----------------
From here we can override with a custom config file in your home dir,
specifically ``$HOME/.config/ASPIRE/config.yaml`` on most Linux platforms.
Items in this file will take precedence over the default configuration.
For other platforms, refer to the `confuse` documentation.

As an example, suppose you want to change the ``ray`` ``temp_dir`` variable
when working on a specific machine.
By creating ``$HOME/.config/ASPIRE/config.yaml`` with the following contents
on that machine, ASPIRE's configuration utility will overload
the ``temp_dir`` directory from a ``/tmp/ray`` folder to ``/scratch/tmp/ray``.

    .. code-block:: yaml

      ray:
        temp_dir: /scratch/tmp/ray


.. GENERATED FROM PYTHON SOURCE LINES 44-67

Override Configuration Directory
--------------------------------
Users may specify a directory containing the configuration file.
This is done by using the enviornment variable ``ASPIREDIR``
If you wanted a file in your working directory to take
precedence over system-overrides, we can create a local ``config.yaml``.

Suppose you want to store ASPIRE logs at ``/tmp/my_proj/aspire_logs``
when working on a specific project. Create the following ``config.yaml``.

    .. code-block:: yaml

      logging:
        log_dir: /tmp/my_proj/logs

This directory must then be set before invoking any code.

    .. code-block:: bash

      export ASPIREDIR=$PWD

Similarly, you could specify any directory you like that might contain a configuration.
This allows you to store configurations for reuse.

.. GENERATED FROM PYTHON SOURCE LINES 69-83

In-Code Overrides
-----------------
You can also specify your own file from an arbitrary location from within Python code.
For precise behavior refer to the confuse documentation.

    .. code-block:: python

      aspire.config.set_file('/path/to/some_experimental_config.yaml')


Or simply set specific variables as needed.
Here we will disable progress bars displayed by
``aspire.utils.trange`` and ``aspire.utils.tqdm``.


.. GENERATED FROM PYTHON SOURCE LINES 83-106

.. code-block:: default


    import time

    from aspire import config
    from aspire.utils import trange

    # Progress bars are displayed by default.

    print("Disabling progress bars")
    config["logging"]["tqdm_disable"] = True

    for _ in trange(3):
        time.sleep(1)
    print("Done Loop 1\n")

    print("Re-enabling progress bars")
    config["logging"]["tqdm_disable"] = False

    for _ in trange(3):
        time.sleep(1)
    print("Done Loop 2\n")






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Disabling progress bars
    Done Loop 1

    Re-enabling progress bars
      0%|          | 0/3 [00:00<?, ?it/s]     33%|###3      | 1/3 [00:01<00:02,  1.00s/it]     67%|######6   | 2/3 [00:02<00:01,  1.00s/it]    100%|##########| 3/3 [00:03<00:00,  1.00s/it]    100%|##########| 3/3 [00:03<00:00,  1.00s/it]
    Done Loop 2





.. GENERATED FROM PYTHON SOURCE LINES 107-114

Resolution
----------
ASPIRE logs the ``config_dir()`` for your system at startup,
along with the configuration sources and resolved configuration at import time.
This should give an accurate snapshot of the configuration before any in-code overrides.
To view these as saved in your log, you will need to locate your `log_dir`.
If you are not sure where it is, we can ask the config:

.. GENERATED FROM PYTHON SOURCE LINES 114-119

.. code-block:: default


    import aspire

    print(aspire.config["logging"]["log_dir"].as_filename())





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/runner/work/ASPIRE-Python/ASPIRE-Python/gallery/tutorials/logs




.. GENERATED FROM PYTHON SOURCE LINES 120-121

You can also resolve the config in code

.. GENERATED FROM PYTHON SOURCE LINES 121-124

.. code-block:: default

    print(aspire.config.dump())






.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    logging:
        tqdm_disable: no
        log_dir: /home/runner/work/ASPIRE-Python/ASPIRE-Python/gallery/tutorials/logs
        log_exceptions: 1
    version: 0.10.1
    common:
        numeric: numpy
        fft: pyfftw

    nufft:
        backends: [cufinufft, finufft, pynfft]

    ray:
        temp_dir: /tmp/ray





.. GENERATED FROM PYTHON SOURCE LINES 125-126

.. _confuse library: https://confuse.readthedocs.io/en/latest/index.html


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  6.015 seconds)


.. _sphx_glr_download_auto_tutorials_configuration.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: configuration.py <configuration.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: configuration.ipynb <configuration.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
